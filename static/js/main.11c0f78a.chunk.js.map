{"version":3,"sources":["components/Players/index.jsx","components/Die/index.jsx","components/DiceSet/index.jsx","components/Scoreboard/index.jsx","components/Game/index.jsx","components/App/index.jsx","serviceWorker.js","index.js"],"names":["Players","props","useState","players","setPlayers","player","setPlayer","className","onSubmit","event","preventDefault","name","value","placeholder","length","onChange","target","type","map","key","onClick","startGame","Die","rolling","saved","DiceSet","dice","currentPlayerIndex","updateLog","rollIndex","turns","setRolling","diceValues","d","useEffect","join","setTimeout","die","i","nextDice","setDice","onDieClick","rows","label","assignable","calculate","filter","values","sort","cts","forEach","Math","max","Object","keys","reduce","a","b","uniques","Set","indexOf","Scoreboard","turnPlayed","setTurnPlayed","scores","setScores","lastPlay","setLastPlay","nextScores","playerScores","row","actual","possible","p","line","updateTotals","totalTop","ones","twos","threes","fours","fives","sixes","bonusTop","total","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yhatzee","chance","bonusYhatzee","handleCellClick","disabled","Game","makeDie","_","random","makeDice","Array","fill","gameStarted","setGameStarted","setCurrentPlayerIndex","setRollIndex","setTurns","log","setLog","logRef","useRef","current","console","scrollTop","scrollHeight","onNextTurn","rollDice","prevLog","resetDice","ref","defaultValue","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.11c0f78a.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './style.scss'\n\nconst Players = (props) => {\n  const [players, setPlayers] = useState([])\n  const [player, setPlayer] = useState('')\n\n  const addPlayer = (event) => {\n    event.preventDefault()\n    setPlayers([...players, player])\n    setPlayer('')\n  }\n\n  const changePlayer = (event) => {\n    setPlayer(event.target.value)\n  }\n\n  const savePlayers = () => {\n    props.startGame(players)\n  }\n\n  return (\n    <div className=\"Players\">\n      <h1>Players</h1>\n      <form onSubmit={addPlayer}>\n        <input\n          name=\"player\"\n          value={player}\n          placeholder={`Player ${players.length + 1}`}\n          onChange={changePlayer}\n        />\n        <button type=\"submit\">Add Player</button>\n      </form>\n      <ul>\n        {players.map(player =>\n          <li key={player}>{player}</li>\n        )}\n      </ul>\n      <button onClick={savePlayers}>start game</button>\n    </div>\n  )\n}\n\nexport default Players\n","import React from 'react'\nimport './style.scss'\n\nconst Die = (props) => {\n  const {rolling, value, saved, onClick} = props\n\n  return rolling && !saved\n    ? <div className=\"Die Die-Rolling\" />\n    : <div\n        className={`Die Die-${value} ${saved ? 'saved' : ''}`}\n        onClick={onClick}\n      >\n        {value}\n      </div>\n}\n\nexport default Die\n","import React, {useEffect, useState} from 'react'\nimport Die from './../Die'\nimport './style.scss'\n\nconst DiceSet = (props) => {\n  const {dice, players, currentPlayerIndex, updateLog, rollIndex, turns} = props\n  const [rolling, setRolling] = useState(true)\n  const diceValues = dice.map(d => d.value)\n  \n  useEffect(() => {\n    updateLog(`${players[currentPlayerIndex]} rolled ${diceValues.join(', ')}`)\n    setRolling(true)\n    setTimeout(() => {\n      setRolling(false)\n    }, 500)\n  }, [rollIndex, currentPlayerIndex, turns]) //eslint-disable-line\n\n  const onDieClick = (i) => {\n    const nextDice = [...dice]\n    nextDice[i].saved = !nextDice[i].saved\n    props.setDice(nextDice)\n  }\n\n  return (\n    <div className=\"Dice\">\n      {dice.map((die, i) => <Die\n        key={i}\n        value={die.value}\n        saved={die.saved}\n        rolling={rolling}\n        onClick={() => {onDieClick(i)}}\n      />)}\n    </div>\n  )\n}\n\nexport default DiceSet","import React, {useState, useEffect} from 'react'\nimport './style.scss'\n\nconst rows = [\n  {\n    key: 'ones',\n    label: 'Ones',\n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 1).length || 0\n    },\n  },\n  {\n    key: 'twos',\n    label: 'Twos', \n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 2).length * 2 || 0\n    },\n  },\n  {\n    key: 'threes',\n    label: 'Threes', \n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 3).length * 3 || 0\n    },\n  },\n  {\n    key: 'fours',\n    label: 'Fours',\n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 4).length * 4 || 0\n    },\n  },\n  {\n    key: 'fives',\n    label: 'Fives', \n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 5).length * 5 || 0\n    },\n  },\n  {\n    key: 'sixes',\n    label: 'Sixes',\n    assignable: true,\n    calculate: (dice) => {\n      return dice.filter(die => die.value === 6).length * 6 || 0\n    },\n  },\n  {\n    key: 'totalTop',\n    label: 'Total 1-6',\n    assignable: false,\n  },\n  {\n    key: 'bonusTop',\n    label: 'Top Bonus',\n    assignable: false,\n  },\n  {\n    key: 'threeOfKind',\n    label: '3 of Kind',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      const cts = {}\n      values.forEach(i => cts[i] = !cts[i] ? 1 : cts[i] + 1)\n      return (Math.max(...Object.keys(cts).map(key => cts[key])) >= 3)\n        ? values.reduce((a,b) => a + b, 0)\n        : 0\n    },\n  },\n  {\n    key: 'fourOfKind',\n    label: '4 of Kind',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      const cts = {}\n      values.forEach(i => cts[i] = !cts[i] ? 1 : cts[i] + 1)\n      return (Math.max(...Object.keys(cts).map(key => cts[key])) >= 4)\n        ? values.reduce((a,b) => a + b, 0)\n        : 0\n    },\n  },\n  {\n    key: 'fullHouse',\n    label: 'Full House',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      const uniques = [...new Set(values)]\n      const cts = {}\n      values.forEach(i => cts[i] = !cts[i] ? 1 : cts[i] + 1)\n      return (\n        Math.max(...Object.keys(cts).map(key => cts[key])) === 3\n        && uniques.length === 2\n      )\n        ? 25\n        : 0\n    }\n  },\n  {\n    key: 'smallStraight',\n    label: 'Small Straight',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      const uniques = [...new Set(values)]\n      return [\"1234\", \"12345\", \"12346\", \"13456\", \"2345\", \"23456\", \"3456\"].indexOf(uniques.join(\"\")) > -1\n        ? 30\n        : 0\n    },\n  },\n  {\n    key: 'largeStraight',\n    label: 'Large Straight',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      return [\"12345\", \"23456\"].indexOf(values.join(\"\")) > -1 ? 40 : 0\n    },\n  },\n  {\n    key: 'yhatzee',\n    label: 'YHATZEE',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value)\n      const uniques = [...new Set(values)]\n      return uniques.length === 1\n        ? 50\n        : 0\n    },\n  },\n  {\n    key: 'chance',\n    label: 'Chance',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value)\n      return values.reduce((a,b) => a + b, 0)\n    },\n  },\n  {\n    key: 'bonusYhatzee',\n    label: 'YHATZEE Bonus',\n    assignable: false,\n  },\n  {\n    key: 'total',\n    label: 'Score',\n    assignable: false,\n  },\n]\n\nconst Scoreboard = (props) => {\n  const {rollIndex, players, currentPlayerIndex, dice, turnPlayed, setTurnPlayed, scores, setScores, turns} = props\n  const [lastPlay, setLastPlay] = useState(null)\n\n  useEffect(() => {\n    if (!Object.keys(scores).length) {\n      const nextScores = {}\n      players.forEach(player => {\n        const playerScores = {}\n        rows.forEach(row => {\n          playerScores[row.key] = null\n          playerScores[row.key] = {actual: null, possible: null}\n        })\n        nextScores[player] = playerScores\n      })\n      setScores(nextScores)\n    }\n  }, [players, scores, setScores])\n\n  useEffect(() => {\n    if (!Object.keys(scores).length) return\n    const player = players[currentPlayerIndex]\n\n    players.filter(p => p !== player).forEach(p => {\n      rows.forEach(row => {\n        scores[p][row.key].possible = null\n      })\n    })\n    rows.filter(row => row.assignable).forEach(row => {\n      scores[player][row.key].possible = row.calculate(dice)\n    })\n\n    setTurnPlayed(false)\n  }, [dice]) // eslint-disable-line\n\n  const updateLog = (line) => {\n    props.updateLog(line)\n  }\n\n  const updateTotals = () => {\n    const nextScores = {...scores}\n    const playerScores = nextScores[players[currentPlayerIndex]]\n    playerScores.totalTop.actual = \n      playerScores.ones.actual \n      + playerScores.twos.actual\n      + playerScores.threes.actual\n      + playerScores.fours.actual\n      + playerScores.fives.actual\n      + playerScores.sixes.actual\n    playerScores.bonusTop.actual = \n      playerScores.totalTop.actual >= 63 ? 35 : null\n    playerScores.total.actual = \n      playerScores.totalTop.actual\n      + playerScores.threeOfKind.actual\n      + playerScores.fourOfKind.actual\n      + playerScores.fullHouse.actual\n      + playerScores.smallStraight.actual\n      + playerScores.largeStraight.actual\n      + playerScores.yhatzee.actual\n      + playerScores.chance.actual\n      + playerScores.bonusTop.actual\n      + playerScores.bonusYhatzee.actual\n    setScores(nextScores)\n    updateLog(`${players[currentPlayerIndex]} has a total score of ${playerScores.total.actual}`)\n  }\n\n  const handleCellClick = (row, player) => {\n    if (\n      turns === 0\n      || rollIndex === -1\n      || turnPlayed\n      || !row.assignable\n      || player !== players[currentPlayerIndex]\n      || scores[player][row.key].actual !== null\n    ) {\n      return\n    }\n    setLastPlay({row, player})\n    const nextScores = {...scores}\n    const diceValues = dice.map(die => die.value)\n    if ([...new Set(diceValues)].length === 1) {\n      if (nextScores[player].yhatzee.actual > 0) {\n        nextScores[player].bonusYhatzee.actual += 50\n      }\n    }\n    nextScores[player][row.key].actual = nextScores[player][row.key].possible\n    setScores(nextScores)\n    updateLog(`${players[currentPlayerIndex]} scored ${nextScores[player][row.key].actual} points on ${row.label}`)\n    setTurnPlayed(true)\n    updateTotals()\n  }\n\n  const undoLastEntry = () => {\n    const nextScores = {...scores}\n    const {row, player} = lastPlay\n    nextScores[player][row.key].actual = null\n    updateLog(`${players[currentPlayerIndex]} removed last score entry`)\n    setScores(nextScores)\n    updateTotals()\n    setTurnPlayed(false)\n  }\n\n  if (!Object.keys(scores).length) {\n    return null\n  }\n\n  return (\n    <div className=\"Scoreboard\">\n      <div className=\"Scoreboard-Scores\">\n        <div className=\"Scoreboard-Scores-RowLabels\">\n          <div className=\"Scoreboard-Scores-RowLabels-Label\" />\n          {rows.map((row, i) =>\n            <div key={i} className=\"Scoreboard-Scores-RowLabels-Label\">\n              {row.label}\n            </div>\n          )}\n        </div>\n        {players.map(player =>\n          <div key={player} className={`Scoreboard-Scores-Column ${player === players[currentPlayerIndex] ? 'Scoreboard-Scores-Column--current' : ''}`}>\n            <div \n              className={`Scoreboard-Scores-Column-Header`}\n            >\n              {player}\n            </div>\n            {rows.map(row =>\n              <div\n                key={row.key}\n                player={player}\n                className={`Scoreboard-Scores-Column-Score ${!row.assignable ? 'Scoreboard-Scores-Column-Score--unassignable' : ''}`}\n                onClick={() => handleCellClick(row, player)}\n              >\n                {scores[player][row.key].actual !== null\n                  ? scores[player][row.key].actual\n                  : null\n                }\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className=\"Scoreboard-Buttons\">\n        <button onClick={undoLastEntry} disabled={!turnPlayed}>\n          undo last entry\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Scoreboard\n","import React, {useState, useEffect, useRef} from 'react'\nimport Players from './../Players'\nimport DiceSet from './../DiceSet'\nimport Scoreboard from './../Scoreboard'\nimport _ from 'lodash'\nimport './style.scss'\n\nconst Game = (props) => {\n  const makeDie = () => {\n    return {saved: false, value: _.random(1, 6)}\n  }\n\n  const makeDice = () => {\n    return new Array(5).fill(null).map(makeDie)\n  }\n\n  const [turnPlayed, setTurnPlayed] = useState(false)\n  const [gameStarted, setGameStarted] = useState(true)\n  const [players, setPlayers] = useState([])\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0)\n  const [rollIndex, setRollIndex] = useState(0)\n  const [dice, setDice] = useState(makeDice())\n  const [turns, setTurns] = useState(0)\n  const [log, setLog] = useState([])\n  const [scores, setScores] = useState({})\n  const logRef = useRef(null)\n\n  useEffect(() => {\n    if (players.length) {\n      setGameStarted(true)\n    }\n  }, [players])\n\n  useEffect(() => {\n    if (!gameStarted) \n      return\n    if (!players.length)\n      return\n    if (turns > players.length * 13) {\n      setCurrentPlayerIndex(-1)\n      updateLog(`GAME OVER.`)\n    }\n    if (!log.length) {\n      updateLog([`Game started with ${players.length} players: ${players.join(', ')}`])\n    }\n  }, [turns, gameStarted, players, players.length, log])\n\n  useEffect(() => {\n    if (!logRef) {\n      return\n    }\n    if (!logRef.current) {\n      return\n    }\n    console.log(logRef)\n    logRef.current.scrollTop = logRef.current.scrollHeight\n  }, [log])\n\n  const startGame = (players) => {\n    setPlayers(players)\n  }\n\n  const onNextTurn = () => {\n    setCurrentPlayerIndex(turns % players.length)\n    setTurns(turns + 1)\n    rollDice(true)\n  }\n\n  const updateLog = (line) => {\n    console.log('update log', line)\n    setLog(prevLog => [...prevLog, line])\n  }\n\n  const rollDice = (resetDice = null) => {\n    const nextDice = resetDice\n      ? makeDice()\n      : [...dice].map((die) => {\n          die.value = !die.saved ? _.random(1, 6) : die.value\n          return die\n        })\n    setDice(nextDice)\n    setRollIndex(resetDice ? 0 : rollIndex + 1)\n  }\n\n  const renderGame = () => {\n    return (\n      <div className=\"Game\">\n        <div className=\"Game-Playfield\">\n          {turns === 0 &&\n            <div className={`Game-Playfield-StartGame`}>\n              <button onClick={onNextTurn}>\n                Player 1 go!\n              </button>\n            </div>\n          }\n          {rollIndex >= 0 && turns > 0 &&\n            <div className=\"Game-Playfield-Fragment\">\n              <div className={`Game-Playfield-TurnIndicator ${rollIndex === 2 ? 'last' : ''}`}>\n                <div className=\"Game-Playfield-TurnIndicator-Player\">{`${players[currentPlayerIndex]}'s turn`}</div>\n                <div className=\"Game-Playfield-TurnIndicator-Roll\">{`Roll # ${rollIndex + 1}`}</div>\n              </div>\n              <div className=\"Game-Playfield-Dice\">\n                <DiceSet \n                  turns={turns}\n                  players={players}\n                  currentPlayerIndex={currentPlayerIndex}\n                  rollIndex={rollIndex}\n                  setDice={setDice}\n                  dice={dice}\n                  updateLog={updateLog}\n                />\n              </div>\n              <div className=\"Game-Playfield-Buttons\">\n                <button onClick={() => rollDice(false)} disabled={rollIndex > 1 || turnPlayed}>\n                  roll again!\n                </button>\n                <button onClick={onNextTurn} disabled={!turnPlayed || players.length * 13 === turns}>\n                  next turn!\n                </button>\n              </div>\n            </div>\n          }\n          <div className=\"Game-Playfield-Log\">\n            <textarea ref={logRef} defaultValue={log.join('\\n')} />\n          </div>\n        </div>\n        {gameStarted &&\n          <div className=\"Game-Scoreboard\">\n            <Scoreboard \n              turns={turns}\n              scores={scores}\n              setScores={setScores}\n              turnPlayed={turnPlayed}\n              setTurnPlayed={setTurnPlayed}\n              setTurns={setTurns}\n              rollIndex={rollIndex}\n              players={players}\n              currentPlayerIndex={currentPlayerIndex}\n              dice={dice}\n              log={log}\n              updateLog={updateLog}\n            />\n          </div>\n        }\n      </div>\n    )\n  }\n\n  return !players.length\n    ? <Players startGame={startGame} />\n    : renderGame()\n}\n\nexport default Game\n","import React from 'react'\nimport Game from './../Game'\nimport './style.scss'\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}