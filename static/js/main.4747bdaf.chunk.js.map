{"version":3,"sources":["assets/1.svg","assets/2.svg","assets/3.svg","assets/4.svg","assets/5.svg","assets/6.svg","components/Players/index.jsx","components/Die/index.jsx","components/DiceSet/index.jsx","components/Scoreboard/index.jsx","components/Game/index.jsx","components/App/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","Players","props","useState","players","setPlayers","player","setPlayer","className","onSubmit","event","preventDefault","length","name","value","placeholder","onChange","target","type","map","key","onClick","startGame","SVGs","die1","die2","die3","die4","die5","die6","Die","rolling","saved","randomIndex","setRandomIndex","useEffect","setInterval","Math","floor","random","src","alt","toString","ref","refRef","DiceSet","dice","currentPlayerIndex","updateLog","rollIndex","turns","refs","setRolling","diceValues","d","join","setTimeout","die","i","nextDice","setDice","onDieClick","rows","label","assignable","calculate","filter","values","sort","cts","forEach","max","Object","keys","reduce","a","b","uniques","Set","indexOf","Scoreboard","turnPlayed","setTurnPlayed","scores","setScores","gameOver","lastPlay","setLastPlay","nextScores","playerScores","row","actual","possible","console","log","p","line","updateTotals","totalTop","ones","twos","threes","fours","fives","sixes","bonusTop","total","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yhatzee","chance","bonusYhatzee","handleCellClick","disabled","Game","makeDie","_","makeDice","Array","fill","gameStarted","setGameStarted","setGameOver","setCurrentPlayerIndex","setRollIndex","setTurns","setLog","finalScores","setFinalScores","logRef","useRef","nextTurnButtonRef","rollAgainButtonRef","dice1Ref","dice2Ref","dice3Ref","dice4Ref","dice5Ref","document","addEventListener","code","current","click","scrollTop","scrollHeight","k1","k2","score","push","onNextTurn","rollDice","prevLog","resetDice","fs","defaultValue","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,yOC6C5BC,G,MA1CC,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBAClBC,EADkB,KACTC,EADS,OAEGF,mBAAS,IAFZ,mBAElBG,EAFkB,KAEVC,EAFU,KAoBzB,OACE,yBAAKC,UAAU,WACb,qDACA,0BAAMC,SAnBQ,SAACC,GACjBA,EAAMC,iBACDL,EAAOM,SAEZP,EAAW,GAAD,mBAAKD,GAAL,CAAcE,KACxBC,EAAU,OAeN,2BACEM,KAAK,SACLC,MAAOR,EACPS,YAAW,iBAAYX,EAAQQ,OAAS,GACxCI,SAhBa,SAACN,GACpBH,EAAUG,EAAMO,OAAOH,UAiBnB,4BAAQI,KAAK,UAAb,eAEF,4BACGd,EAAQe,KAAI,SAAAb,GAAM,OACjB,wBAAIc,IAAKd,GAASA,OAGtB,4BAAQe,QArBQ,WAClBnB,EAAMoB,UAAUlB,KAoBd,iB,mGC9BAmB,G,MAAO,CAACC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,MAwB7BC,EAvBH,SAAC5B,GAAW,IACf6B,EAAkC7B,EAAlC6B,QAASjB,EAAyBZ,EAAzBY,MAAOkB,EAAkB9B,EAAlB8B,MAAOX,EAAWnB,EAAXmB,QADT,EAEiBlB,mBAAS,GAF1B,mBAEd8B,EAFc,KAEDC,EAFC,KAUrB,OANAC,qBAAU,WACRC,aAAY,WACVF,EAAeG,KAAKC,MAAsB,EAAhBD,KAAKE,aAC7B,MACH,IAEIR,IAAYC,EACf,yBAAKxB,UAAU,mBACb,yBAAKgC,IAAKjB,EAAKU,GAAcQ,KAAMR,EAAc,GAAGS,cAEtD,yBACEC,IAAKzC,EAAM0C,OACXpC,UAAS,kBAAaM,EAAb,YAAsBkB,EAAQ,QAAU,IACjDX,QAASA,GAET,yBAAKmB,IAAKjB,EAAKT,EAAQ,GAAI2B,KAAM3B,EAAQ,GAAG4B,eCOrCG,G,MAjCC,SAAC3C,GAAW,IACnB4C,EAAwE5C,EAAxE4C,KAAM1C,EAAkEF,EAAlEE,QAAS2C,EAAyD7C,EAAzD6C,mBAAoBC,EAAqC9C,EAArC8C,UAAWC,EAA0B/C,EAA1B+C,UAAWC,EAAehD,EAAfgD,MAAOC,EAAQjD,EAARiD,KAD9C,EAEKhD,oBAAS,GAFd,mBAElB4B,EAFkB,KAETqB,EAFS,KAGnBC,EAAaP,EAAK3B,KAAI,SAAAmC,GAAC,OAAIA,EAAExC,SAEnCqB,qBAAU,WACRa,EAAU,GAAD,OAAI5C,EAAQ2C,GAAZ,mBAA0CM,EAAWE,KAAK,QACnEH,GAAW,GACXI,YAAW,WACTJ,GAAW,KACV,OACF,CAACH,EAAWF,EAAoBG,IAQnC,OACE,yBAAK1C,UAAU,QACZsC,EAAK3B,KAAI,SAACsC,EAAKC,GAAN,OAAY,kBAAC,EAAD,CACpBd,OAAQO,EAAKO,GACbtC,IAAKsC,EACL5C,MAAO2C,EAAI3C,MACXkB,MAAOyB,EAAIzB,MACXD,QAASA,EACTV,QAAS,YAdI,SAACqC,GAClB,IAAMC,EAAQ,YAAOb,GACrBa,EAASD,GAAG1B,OAAS2B,EAASD,GAAG1B,MACjC9B,EAAM0D,QAAQD,GAWME,CAAWH,Y,OC5B7BI,G,MAAO,CACX,CACE1C,IAAK,OACL2C,MAAO,OACPC,YAAY,EACZC,UAAW,SAACnB,GACV,OAAOA,EAAKoB,QAAO,SAAAT,GAAG,OAAkB,IAAdA,EAAI3C,SAAaF,QAAU,IAGzD,CACEQ,IAAK,OACL2C,MAAO,OACPC,YAAY,EACZC,UAAW,SAACnB,GACV,OAAoD,EAA7CA,EAAKoB,QAAO,SAAAT,GAAG,OAAkB,IAAdA,EAAI3C,SAAaF,QAAc,IAG7D,CACEQ,IAAK,SACL2C,MAAO,SACPC,YAAY,EACZC,UAAW,SAACnB,GACV,OAAoD,EAA7CA,EAAKoB,QAAO,SAAAT,GAAG,OAAkB,IAAdA,EAAI3C,SAAaF,QAAc,IAG7D,CACEQ,IAAK,QACL2C,MAAO,QACPC,YAAY,EACZC,UAAW,SAACnB,GACV,OAAoD,EAA7CA,EAAKoB,QAAO,SAAAT,GAAG,OAAkB,IAAdA,EAAI3C,SAAaF,QAAc,IAG7D,CACEQ,IAAK,QACL2C,MAAO,QACPC,YAAY,EACZC,UAAW,SAACnB,GACV,OAAoD,EAA7CA,EAAKoB,QAAO,SAAAT,GAAG,OAAkB,IAAdA,EAAI3C,SAAaF,QAAc,IAG7D,CACEQ,IAAK,QACL2C,MAAO,QACPC,YAAY,EACZC,UAAW,SAACnB,GACV,OAAoD,EAA7CA,EAAKoB,QAAO,SAAAT,GAAG,OAAkB,IAAdA,EAAI3C,SAAaF,QAAc,IAG7D,CACEQ,IAAK,WACL2C,MAAO,YACPC,YAAY,GAEd,CACE5C,IAAK,WACL2C,MAAO,YACPC,YAAY,GAEd,CACE5C,IAAK,cACL2C,MAAO,YACPC,YAAY,EACZC,UAAW,SAACnB,GACV,IAAMqB,EAASrB,EAAK3B,KAAI,SAAAsC,GAAG,OAAIA,EAAI3C,SAAOsD,OACpCC,EAAM,GAEZ,OADAF,EAAOG,SAAQ,SAAAZ,GAAC,OAAIW,EAAIX,GAAMW,EAAIX,GAASW,EAAIX,GAAK,EAAb,KAC/BrB,KAAKkC,IAAL,MAAAlC,KAAI,YAAQmC,OAAOC,KAAKJ,GAAKlD,KAAI,SAAAC,GAAG,OAAIiD,EAAIjD,SAAU,EAC1D+C,EAAOO,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAIC,IAAG,GAC9B,IAGR,CACExD,IAAK,aACL2C,MAAO,YACPC,YAAY,EACZC,UAAW,SAACnB,GACV,IAAMqB,EAASrB,EAAK3B,KAAI,SAAAsC,GAAG,OAAIA,EAAI3C,SAAOsD,OACpCC,EAAM,GAEZ,OADAF,EAAOG,SAAQ,SAAAZ,GAAC,OAAIW,EAAIX,GAAMW,EAAIX,GAASW,EAAIX,GAAK,EAAb,KAC/BrB,KAAKkC,IAAL,MAAAlC,KAAI,YAAQmC,OAAOC,KAAKJ,GAAKlD,KAAI,SAAAC,GAAG,OAAIiD,EAAIjD,SAAU,EAC1D+C,EAAOO,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAIC,IAAG,GAC9B,IAGR,CACExD,IAAK,YACL2C,MAAO,aACPC,YAAY,EACZC,UAAW,SAACnB,GACV,IAAMqB,EAASrB,EAAK3B,KAAI,SAAAsC,GAAG,OAAIA,EAAI3C,SAAOsD,OACpCS,EAAO,YAAO,IAAIC,IAAIX,IACtBE,EAAM,GAEZ,OADAF,EAAOG,SAAQ,SAAAZ,GAAC,OAAIW,EAAIX,GAAMW,EAAIX,GAASW,EAAIX,GAAK,EAAb,KAEkB,IAAvDrB,KAAKkC,IAAL,MAAAlC,KAAI,YAAQmC,OAAOC,KAAKJ,GAAKlD,KAAI,SAAAC,GAAG,OAAIiD,EAAIjD,SACtB,IAAnByD,EAAQjE,OAET,GACA,IAGR,CACEQ,IAAK,gBACL2C,MAAO,iBACPC,YAAY,EACZC,UAAW,SAACnB,GACV,IAAMqB,EAASrB,EAAK3B,KAAI,SAAAsC,GAAG,OAAIA,EAAI3C,SAAOsD,OACpCS,EAAO,YAAO,IAAIC,IAAIX,IAC5B,MAAO,CAAC,OAAQ,QAAS,QAAS,QAAS,OAAQ,QAAS,QAAQY,QAAQF,EAAQtB,KAAK,MAAQ,EAC7F,GACA,IAGR,CACEnC,IAAK,gBACL2C,MAAO,iBACPC,YAAY,EACZC,UAAW,SAACnB,GACV,IAAMqB,EAASrB,EAAK3B,KAAI,SAAAsC,GAAG,OAAIA,EAAI3C,SAAOsD,OAC1C,MAAO,CAAC,QAAS,SAASW,QAAQZ,EAAOZ,KAAK,MAAQ,EAAI,GAAK,IAGnE,CACEnC,IAAK,UACL2C,MAAO,UACPC,YAAY,EACZC,UAAW,SAACnB,GACV,IAAMqB,EAASrB,EAAK3B,KAAI,SAAAsC,GAAG,OAAIA,EAAI3C,SAEnC,OAA0B,IADb,YAAO,IAAIgE,IAAIX,IACbvD,OACX,GACA,IAGR,CACEQ,IAAK,SACL2C,MAAO,SACPC,YAAY,EACZC,UAAW,SAACnB,GAEV,OADeA,EAAK3B,KAAI,SAAAsC,GAAG,OAAIA,EAAI3C,SACrB4D,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAIC,IAAG,KAGzC,CACExD,IAAK,eACL2C,MAAO,gBACPC,YAAY,GAEd,CACE5C,IAAK,QACL2C,MAAO,QACPC,YAAY,KA+JDgB,EA3JI,SAAC9E,GAAW,IACtB+C,EAA+G/C,EAA/G+C,UAAW7C,EAAoGF,EAApGE,QAAS2C,EAA2F7C,EAA3F6C,mBAAoBD,EAAuE5C,EAAvE4C,KAAMmC,EAAiE/E,EAAjE+E,WAAYC,EAAqDhF,EAArDgF,cAAeC,EAAsCjF,EAAtCiF,OAAQC,EAA8BlF,EAA9BkF,UAAWlC,EAAmBhD,EAAnBgD,MAAOmC,EAAYnF,EAAZmF,SAD9E,EAEIlF,mBAAS,MAFb,mBAErBmF,EAFqB,KAEXC,EAFW,KAI5BpD,qBAAU,WACR,IAAKqC,OAAOC,KAAKU,GAAQvE,OAAQ,CAC/B,IAAM4E,EAAa,GACnBpF,EAAQkE,SAAQ,SAAAhE,GACd,IAAMmF,EAAe,GACrB3B,EAAKQ,SAAQ,SAAAoB,GACXD,EAAaC,EAAItE,KAAO,CACtBuE,OAAQ,KACRC,SAAU,KACV5B,WAAY0B,EAAI1B,eAGpBwB,EAAWlF,GAAUmF,KAEvBL,EAAUI,MAEX,CAACpF,EAAS+E,EAAQC,IAErBjD,qBAAU,WACR0D,QAAQC,IAAI,kBACZ,IAAMN,EAAU,eAAOL,GACvB,GAAKX,OAAOC,KAAKe,GAAY5E,OAA7B,CACA,IAAMN,EAASF,EAAQ2C,GAEvB3C,EAAQ8D,QAAO,SAAA6B,GAAC,OAAIA,IAAMzF,KAAQgE,SAAQ,SAAAyB,GACxCjC,EAAKQ,SAAQ,SAAAoB,GACXF,EAAWO,GAAGL,EAAItE,KAAKwE,SAAW,WAGtC9B,EAAKI,QAAO,SAAAwB,GAAG,OAAIA,EAAI1B,cAAYM,SAAQ,SAAAoB,GACzCF,EAAWlF,GAAQoF,EAAItE,KAAKwE,SAAWF,EAAIzB,UAAUnB,MAGvDsC,EAAUI,GACVN,GAAc,MACb,CAACpC,IAEJ,IAAME,EAAY,SAACgD,GACjB9F,EAAM8C,UAAUgD,IAGZC,EAAe,WACnB,IAAMT,EAAU,eAAOL,GACjBM,EAAeD,EAAWpF,EAAQ2C,IACxC0C,EAAaS,SAASP,OACpBF,EAAaU,KAAKR,OAChBF,EAAaW,KAAKT,OAClBF,EAAaY,OAAOV,OACpBF,EAAaa,MAAMX,OACnBF,EAAac,MAAMZ,OACnBF,EAAae,MAAMb,OACvBF,EAAagB,SAASd,OACpBF,EAAaS,SAASP,QAAU,GAAK,GAAK,KAC5CF,EAAaiB,MAAMf,OACjBF,EAAaS,SAASP,OACpBF,EAAakB,YAAYhB,OACzBF,EAAamB,WAAWjB,OACxBF,EAAaoB,UAAUlB,OACvBF,EAAaqB,cAAcnB,OAC3BF,EAAasB,cAAcpB,OAC3BF,EAAauB,QAAQrB,OACrBF,EAAawB,OAAOtB,OACpBF,EAAagB,SAASd,OACtBF,EAAayB,aAAavB,OAC9BP,EAAUI,GACVxC,EAAU,GAAD,OAAI5C,EAAQ2C,GAAZ,iCAAwD0C,EAAaiB,MAAMf,UAuCtF,OAAKnB,OAAOC,KAAKU,GAAQvE,OAKvB,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,sCACdsD,EAAK3C,KAAI,SAACuE,EAAKhC,GAAN,OACR,yBAAKtC,IAAKsC,EAAGlD,UAAU,qCACpBkF,EAAI3B,WAIV3D,EAAQe,KAAI,SAAAb,GAAM,OACjB,yBAAKc,IAAKd,EAAQE,UAAS,mCAA8BF,IAAWF,EAAQ2C,GAAsB,oCAAsC,KACtI,yBACEvC,UAAS,mCAERF,GAEFwD,EAAK3C,KAAI,SAAAuE,GAAG,OACX,yBACEtE,IAAKsE,EAAItE,IACTd,OAAQA,EACRE,UAAS,yCAAqCkF,EAAI1B,WAA8D,GAAjD,gDAC/D3C,QAAS,kBA/DC,SAACqE,EAAKpF,GAC5B,GACY,IAAV4C,IACkB,IAAfD,IACAgC,GACCS,EAAI1B,YACL1D,IAAWF,EAAQ2C,IACgB,OAAnCoC,EAAO7E,GAAQoF,EAAItE,KAAKuE,OAN7B,CAUAJ,EAAY,CAACG,MAAKpF,WAClB,IAAMkF,EAAU,eAAOL,GACjB9B,EAAaP,EAAK3B,KAAI,SAAAsC,GAAG,OAAIA,EAAI3C,SACC,IAApC,YAAI,IAAIgE,IAAIzB,IAAazC,QACvB4E,EAAWlF,GAAQ0G,QAAQrB,OAAS,IACtCH,EAAWlF,GAAQ4G,aAAavB,QAAU,IAG9CH,EAAWlF,GAAQoF,EAAItE,KAAKuE,OAASH,EAAWlF,GAAQoF,EAAItE,KAAKwE,SACjER,EAAUI,GACVxC,EAAU,GAAD,OAAI5C,EAAQ2C,GAAZ,mBAA0CyC,EAAWlF,GAAQoF,EAAItE,KAAKuE,OAAtE,sBAA0FD,EAAI3B,QACvGmB,GAAc,GACde,KAwC2BkB,CAAgBzB,EAAKpF,KAEA,OAAnC6E,EAAO7E,GAAQoF,EAAItE,KAAKuE,OACrBR,EAAO7E,GAAQoF,EAAItE,KAAKuE,OACxB,cAOd,yBAAKnF,UAAU,sBACb,4BAAQa,QAjDQ,WACpB,IAAMmE,EAAU,eAAOL,GAChBO,EAAeJ,EAAfI,IACPF,EADsBF,EAAVhF,QACOoF,EAAItE,KAAKuE,OAAS,KACrC3C,EAAU,GAAD,OAAI5C,EAAQ2C,GAAZ,8BACTqC,EAAUI,GACVS,IACAf,GAAc,IA0CsBkC,UAAWnC,GAAcI,GAAzD,qBAtCG,M,gBC5BIgC,G,MAzOF,SAACnH,GACZ,IAAMoH,EAAU,WACd,MAAO,CAACtF,OAAO,EAAOlB,MAAOyG,IAAEhF,OAAO,EAAG,KAGrCiF,EAAW,WACf,OAAO,IAAIC,MAAM,GAAGC,KAAK,MAAMvG,IAAImG,IANf,EAScnH,oBAAS,GATvB,mBASf8E,EATe,KASHC,EATG,OAUgB/E,oBAAS,GAVzB,mBAUfwH,EAVe,KAUFC,EAVE,OAWUzH,oBAAS,GAXnB,mBAWfkF,EAXe,KAWLwC,EAXK,OAYQ1H,mBAAS,IAZjB,mBAYfC,EAZe,KAYNC,EAZM,OAa8BF,mBAAS,GAbvC,mBAaf4C,EAbe,KAaK+E,EAbL,OAcY3H,mBAAS,GAdrB,mBAcf8C,EAde,KAcJ8E,EAdI,OAeE5H,mBAASqH,KAfX,mBAef1E,EAfe,KAeTc,EAfS,OAgBIzD,mBAAS,GAhBb,mBAgBf+C,EAhBe,KAgBR8E,EAhBQ,OAiBA7H,mBAAS,IAjBT,mBAiBf2F,EAjBe,KAiBVmC,EAjBU,OAkBM9H,mBAAS,IAlBf,mBAkBfgF,EAlBe,KAkBPC,EAlBO,OAmBgBjF,mBAAS,MAnBzB,mBAmBf+H,EAnBe,KAmBFC,GAnBE,KAoBhBC,GAASC,iBAAO,MAChBC,GAAoBD,iBAAO,MAC3BE,GAAqBF,iBAAO,MAC5BG,GAAWH,iBAAO,MAClBI,GAAWJ,iBAAO,MAClBK,GAAWL,iBAAO,MAClBM,GAAWN,iBAAO,MAClBO,GAAWP,iBAAO,MAExBlG,qBAAU,WACJ/B,EAAQQ,QACVgH,GAAe,KAEhB,CAACxH,IAEJ+B,qBAAU,WACHwF,GAEAvH,EAAQQ,SAERkF,EAAIlF,SACPoC,GAAU,6BACVA,GAAU,+BACVA,GAAU,8BACVA,GAAU,0CACVA,GAAU,qBAAD,OAAsB5C,EAAQQ,OAA9B,qBAAiDR,EAAQmD,KAAK,QAEvEsF,SAASC,iBAAiB,WAAW,SAACpI,GACjB,SAAfA,EAAMqI,KACRT,GAAkBU,SAAWV,GAAkBU,QAAQC,QAEjC,SAAfvI,EAAMqI,KACbR,GAAmBS,SAAWT,GAAmBS,QAAQC,QAEnC,WAAfvI,EAAMqI,KACbP,GAASQ,SAAWR,GAASQ,QAAQC,QAEf,WAAfvI,EAAMqI,KACbN,GAASO,SAAWP,GAASO,QAAQC,QAEf,WAAfvI,EAAMqI,KACbL,GAASM,SAAWN,GAASM,QAAQC,QAEf,WAAfvI,EAAMqI,KACbJ,GAASK,SAAWL,GAASK,QAAQC,QAEf,WAAfvI,EAAMqI,MACbH,GAASI,SAAWJ,GAASI,QAAQC,eAI1C,CAAC/F,EAAOyE,EAAavH,EAASA,EAAQQ,OAAQkF,IAEjD3D,qBAAU,WACHiG,IAGAA,GAAOY,UAGZZ,GAAOY,QAAQE,UAAYd,GAAOY,QAAQG,gBACzC,CAACrD,IAEJ3D,qBAAU,WACR,GAAK/B,EAAQQ,SACTyE,EAAJ,CAEA,IADA,IAAIqB,EAAQ,EACZ,MAAiBlC,OAAOC,KAAKU,GAA7B,eACE,IADG,IAAMiE,EAAE,KACX,MAAiB5E,OAAOC,KAAKU,EAAOiE,IAApC,eAA0C,CAArC,IAAMC,EAAE,KACLC,EAAQnE,EAAOiE,GAAIC,GACzB3C,GAAS4C,EAAMtF,YAA+B,OAAjBsF,EAAM3D,OAAkB,EAAI,EAG7D,GAAIe,IAA2B,GAAjBtG,EAAQQ,OAAa,CACjCoC,GAAU,cACV,IAAMkF,EAAc,GAFa,uBAGjC,YAAqB9H,EAArB,+CAA8B,CAAC,IAApBE,EAAmB,QAC5B4H,EAAYqB,KAAK,CAACjJ,SAAQgJ,MAAOnE,EAAO7E,GAAQoG,MAAMf,SACtD3C,GAAU,GAAD,OAAI1C,EAAJ,iCAAmC6E,EAAO7E,GAAQoG,MAAMf,UALlC,kFAOjCuC,EAAY9D,MAAK,SAACO,EAAGC,GAAJ,OAAUD,EAAE2E,MAAQ1E,EAAE0E,OAAS,EAAI,KACpDtG,GAAU,GAAD,OAAIkF,EAAY,GAAG5H,OAAnB,WACT6H,GAAeD,GACfL,GAAY,OAEb,CAAC1C,EAAQE,EAAUjF,IAEtB+B,qBAAU,cACP,IAEH,IAIMqH,GAAa,WACjB1B,EAAsB5E,EAAQ9C,EAAQQ,QACtCoH,EAAS9E,EAAQ,GACjBuG,IAAS,IAGLzG,GAAY,SAACgD,GACjBiC,GAAO,SAAAyB,GAAO,4BAAQA,GAAR,CAAiB1D,QAG3ByD,GAAW,WAAuB,IAAtBE,EAAqB,uDAAT,KACtBhG,EAAWgG,EACbnC,IACA,YAAI1E,GAAM3B,KAAI,SAACsC,GAEb,OADAA,EAAI3C,MAAS2C,EAAIzB,MAAyByB,EAAI3C,MAArByG,IAAEhF,OAAO,EAAG,GAC9BkB,KAEbG,EAAQD,GACRoE,EAAa4B,EAAY,EAAI1G,EAAY,IAgG3C,OAAQ7C,EAAQQ,OA3FZ,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,kBACF,IAAV0C,GACC,yBAAK1C,UAAS,4BACZ,4BAAQa,QAASmI,IAAjB,iBAKHnE,GACC,yBAAK7E,UAAU,2BACb,yBAAKA,UAAU,2BACb,2CACA,uCAAS0H,EAAY,GAAG5H,OAAxB,WACA,+BACE,+BACG4H,EAAY/G,KAAI,SAACyI,EAAIlG,GAAL,OACf,4BACE,uCAASA,EAAE,IACX,4BAAKkG,EAAGtJ,QACR,sCAAQsJ,EAAGN,MAAX,qBAQZjE,GAAYpC,GAAa,GAAKC,EAAQ,GACtC,yBAAK1C,UAAU,2BACb,yBAAKA,UAAS,uCAAgD,IAAdyC,EAAkB,OAAS,KACzE,yBAAKzC,UAAU,uCAAf,UAAyDJ,EAAQ2C,GAAjE,YACA,yBAAKvC,UAAU,qCAAf,iBAA8DyC,EAAY,KAE5E,yBAAKzC,UAAU,uBACb,kBAAC,EAAD,CACE0C,MAAOA,EACP9C,QAASA,EACT2C,mBAAoBA,EACpBE,UAAWA,EACXW,QAASA,EACTd,KAAMA,EACNE,UAAWA,GACXG,KAAM,CAACqF,GAAUC,GAAUC,GAAUC,GAAUC,OAGnD,yBAAKpI,UAAU,0BACb,4BACEmC,IAAK4F,GACLlH,QAAS,kBAAMoI,IAAS,IACxBrC,SAAUnE,EAAY,GAAKgC,GAH7B,eAOA,4BACEtC,IAAK2F,GACLjH,QAASmI,GACTpC,UAAWnC,GAA+B,GAAjB7E,EAAQQ,SAAgBsC,GAHnD,gBAUN,yBAAK1C,UAAU,sBACb,8BAAUmC,IAAKyF,GAAQyB,aAAc/D,EAAIvC,KAAK,UAGjDoE,GACC,yBAAKnH,UAAU,mBACb,kBAAC,EAAD,CACE6E,SAAUA,EACVnC,MAAOA,EACPiC,OAAQA,GAAU,GAClBC,UAAWA,EACXH,WAAYA,EACZC,cAAeA,EACf8C,SAAUA,EACV/E,UAAWA,EACX7C,QAASA,EACT2C,mBAAoBA,EACpBD,KAAMA,EACNgD,IAAKA,EACL9C,UAAWA,OASnB,kBAAC,EAAD,CAAS1B,UAvHK,SAAClB,GACjBC,EAAWD,QC1GA0J,G,MARH,SAAC5J,GACX,OACE,yBAAKM,UAAU,OACb,kBAAC,EAAD,SCKcuJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASxB,SAASyB,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjF,QAAQiF,MAAMA,EAAMC,c","file":"static/js/main.4747bdaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.b64f64ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.f2b87a0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.1e4cb8cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.847aadb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.74512224.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.d92b4406.svg\";","import React, {useState} from 'react'\nimport './style.scss'\n\nconst Players = (props) => {\n  const [players, setPlayers] = useState([])\n  const [player, setPlayer] = useState('')\n\n  const addPlayer = (event) => {\n    event.preventDefault()\n    if (!player.length) \n      return\n    setPlayers([...players, player])\n    setPlayer('')\n  }\n\n  const changePlayer = (event) => {\n    setPlayer(event.target.value)\n  }\n\n  const savePlayers = () => {\n    props.startGame(players)\n  }\n\n  return (\n    <div className=\"Players\">\n      <p>Who's playing Yhatzee?</p>\n      <form onSubmit={addPlayer}>\n        <input\n          name=\"player\"\n          value={player}\n          placeholder={`Player ${players.length + 1}`}\n          onChange={changePlayer}\n        />\n        <button type=\"submit\">Add Player</button>\n      </form>\n      <ul>\n        {players.map(player =>\n          <li key={player}>{player}</li>\n        )}\n      </ul>\n      <button onClick={savePlayers}>start game</button>\n    </div>\n  )\n}\n\nexport default Players\n","import React, {useState} from 'react'\nimport die1 from './../../assets/1.svg'\nimport die2 from './../../assets/2.svg'\nimport die3 from './../../assets/3.svg'\nimport die4 from './../../assets/4.svg'\nimport die5 from './../../assets/5.svg'\nimport die6 from './../../assets/6.svg'\nimport './style.scss'\nimport { useEffect } from 'react'\n\nconst SVGs = [die1, die2, die3, die4, die5, die6]\nconst Die = (props) => {\n  const {rolling, value, saved, onClick} = props\n  const [randomIndex, setRandomIndex] = useState(0)\n\n  useEffect(() => {\n    setInterval(() => {\n      setRandomIndex(Math.floor(Math.random() * 6))\n     }, 30)\n  }, [])\n\n  return rolling && !saved\n    ? <div className=\"Die Die-Rolling\">\n        <img src={SVGs[randomIndex]} alt={(randomIndex + 1).toString()} />\n      </div>\n    : <div\n        ref={props.refRef}\n        className={`Die Die-${value} ${saved ? 'saved' : ''}`}\n        onClick={onClick}\n      >\n        <img src={SVGs[value - 1]} alt={(value - 1).toString()} />\n      </div>\n}\n\nexport default Die\n","import React, {useEffect, useState} from 'react'\nimport Die from './../Die'\nimport './style.scss'\n\nconst DiceSet = (props) => {\n  const {dice, players, currentPlayerIndex, updateLog, rollIndex, turns, refs} = props\n  const [rolling, setRolling] = useState(true)\n  const diceValues = dice.map(d => d.value)\n  \n  useEffect(() => {\n    updateLog(`${players[currentPlayerIndex]} rolled ${diceValues.join(', ')}`)\n    setRolling(true)\n    setTimeout(() => {\n      setRolling(false)\n    }, 500)\n  }, [rollIndex, currentPlayerIndex, turns]) //eslint-disable-line\n\n  const onDieClick = (i) => {\n    const nextDice = [...dice]\n    nextDice[i].saved = !nextDice[i].saved\n    props.setDice(nextDice)\n  }\n\n  return (\n    <div className=\"Dice\">\n      {dice.map((die, i) => <Die\n        refRef={refs[i]}\n        key={i}\n        value={die.value}\n        saved={die.saved}\n        rolling={rolling}\n        onClick={() => {onDieClick(i)}}\n      />)}\n    </div>\n  )\n}\n\nexport default DiceSet","import React, {useState, useEffect} from 'react'\nimport './style.scss'\n\nconst rows = [\n  {\n    key: 'ones',\n    label: 'Ones',\n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 1).length || 0\n    },\n  },\n  {\n    key: 'twos',\n    label: 'Twos', \n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 2).length * 2 || 0\n    },\n  },\n  {\n    key: 'threes',\n    label: 'Threes', \n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 3).length * 3 || 0\n    },\n  },\n  {\n    key: 'fours',\n    label: 'Fours',\n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 4).length * 4 || 0\n    },\n  },\n  {\n    key: 'fives',\n    label: 'Fives', \n    assignable: true, \n    calculate: (dice) => {\n      return dice.filter(die => die.value === 5).length * 5 || 0\n    },\n  },\n  {\n    key: 'sixes',\n    label: 'Sixes',\n    assignable: true,\n    calculate: (dice) => {\n      return dice.filter(die => die.value === 6).length * 6 || 0\n    },\n  },\n  {\n    key: 'totalTop',\n    label: 'Total 1-6',\n    assignable: false,\n  },\n  {\n    key: 'bonusTop',\n    label: 'Top Bonus',\n    assignable: false,\n  },\n  {\n    key: 'threeOfKind',\n    label: '3 of Kind',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      const cts = {}\n      values.forEach(i => cts[i] = !cts[i] ? 1 : cts[i] + 1)\n      return (Math.max(...Object.keys(cts).map(key => cts[key])) >= 3)\n        ? values.reduce((a,b) => a + b, 0)\n        : 0\n    },\n  },\n  {\n    key: 'fourOfKind',\n    label: '4 of Kind',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      const cts = {}\n      values.forEach(i => cts[i] = !cts[i] ? 1 : cts[i] + 1)\n      return (Math.max(...Object.keys(cts).map(key => cts[key])) >= 4)\n        ? values.reduce((a,b) => a + b, 0)\n        : 0\n    },\n  },\n  {\n    key: 'fullHouse',\n    label: 'Full House',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      const uniques = [...new Set(values)]\n      const cts = {}\n      values.forEach(i => cts[i] = !cts[i] ? 1 : cts[i] + 1)\n      return (\n        Math.max(...Object.keys(cts).map(key => cts[key])) === 3\n        && uniques.length === 2\n      )\n        ? 25\n        : 0\n    }\n  },\n  {\n    key: 'smallStraight',\n    label: 'Small Straight',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      const uniques = [...new Set(values)]\n      return [\"1234\", \"12345\", \"12346\", \"13456\", \"2345\", \"23456\", \"3456\"].indexOf(uniques.join(\"\")) > -1\n        ? 30\n        : 0\n    },\n  },\n  {\n    key: 'largeStraight',\n    label: 'Large Straight',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value).sort()\n      return [\"12345\", \"23456\"].indexOf(values.join(\"\")) > -1 ? 40 : 0\n    },\n  },\n  {\n    key: 'yhatzee',\n    label: 'YHATZEE',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value)\n      const uniques = [...new Set(values)]\n      return uniques.length === 1\n        ? 50\n        : 0\n    },\n  },\n  {\n    key: 'chance',\n    label: 'Chance',\n    assignable: true,\n    calculate: (dice) => {\n      const values = dice.map(die => die.value)\n      return values.reduce((a,b) => a + b, 0)\n    },\n  },\n  {\n    key: 'bonusYhatzee',\n    label: 'YHATZEE Bonus',\n    assignable: false,\n  },\n  {\n    key: 'total',\n    label: 'Score',\n    assignable: false,\n  },\n]\n\nconst Scoreboard = (props) => {\n  const {rollIndex, players, currentPlayerIndex, dice, turnPlayed, setTurnPlayed, scores, setScores, turns, gameOver} = props\n  const [lastPlay, setLastPlay] = useState(null)\n\n  useEffect(() => {\n    if (!Object.keys(scores).length) {\n      const nextScores = {}\n      players.forEach(player => {\n        const playerScores = {}\n        rows.forEach(row => {\n          playerScores[row.key] = {\n            actual: null, \n            possible: null,\n            assignable: row.assignable,\n          }\n        })\n        nextScores[player] = playerScores\n      })\n      setScores(nextScores)\n    }\n  }, [players, scores, setScores])\n\n  useEffect(() => {\n    console.log('my dumb effect')\n    const nextScores = {...scores}\n    if (!Object.keys(nextScores).length) return\n    const player = players[currentPlayerIndex]\n\n    players.filter(p => p !== player).forEach(p => {\n      rows.forEach(row => {\n        nextScores[p][row.key].possible = null\n      })\n    })\n    rows.filter(row => row.assignable).forEach(row => {\n      nextScores[player][row.key].possible = row.calculate(dice)\n    })\n\n    setScores(nextScores)\n    setTurnPlayed(false)\n  }, [dice]) //eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateLog = (line) => {\n    props.updateLog(line)\n  }\n\n  const updateTotals = () => {\n    const nextScores = {...scores}\n    const playerScores = nextScores[players[currentPlayerIndex]]\n    playerScores.totalTop.actual = \n      playerScores.ones.actual \n      + playerScores.twos.actual\n      + playerScores.threes.actual\n      + playerScores.fours.actual\n      + playerScores.fives.actual\n      + playerScores.sixes.actual\n    playerScores.bonusTop.actual = \n      playerScores.totalTop.actual >= 63 ? 35 : null\n    playerScores.total.actual = \n      playerScores.totalTop.actual\n      + playerScores.threeOfKind.actual\n      + playerScores.fourOfKind.actual\n      + playerScores.fullHouse.actual\n      + playerScores.smallStraight.actual\n      + playerScores.largeStraight.actual\n      + playerScores.yhatzee.actual\n      + playerScores.chance.actual\n      + playerScores.bonusTop.actual\n      + playerScores.bonusYhatzee.actual\n    setScores(nextScores)\n    updateLog(`${players[currentPlayerIndex]} has a total score of ${playerScores.total.actual}`)\n  }\n\n  const handleCellClick = (row, player) => {\n    if (\n      turns === 0\n      || rollIndex === -1\n      || turnPlayed\n      || !row.assignable\n      || player !== players[currentPlayerIndex]\n      || scores[player][row.key].actual !== null\n    ) {\n      return\n    }\n    setLastPlay({row, player})\n    const nextScores = {...scores}\n    const diceValues = dice.map(die => die.value)\n    if ([...new Set(diceValues)].length === 1) {\n      if (nextScores[player].yhatzee.actual > 0) {\n        nextScores[player].bonusYhatzee.actual += 50\n      }\n    }\n    nextScores[player][row.key].actual = nextScores[player][row.key].possible\n    setScores(nextScores)\n    updateLog(`${players[currentPlayerIndex]} scored ${nextScores[player][row.key].actual} points on ${row.label}`)\n    setTurnPlayed(true)\n    updateTotals()\n  }\n\n  const undoLastEntry = () => {\n    const nextScores = {...scores}\n    const {row, player} = lastPlay\n    nextScores[player][row.key].actual = null\n    updateLog(`${players[currentPlayerIndex]} removed last score entry`)\n    setScores(nextScores)\n    updateTotals()\n    setTurnPlayed(false)\n  }\n\n  if (!Object.keys(scores).length) {\n    return null\n  }\n\n  return (\n    <div className=\"Scoreboard\">\n      <div className=\"Scoreboard-Scores\">\n        <div className=\"Scoreboard-Scores-RowLabels\">\n          <div className=\"Scoreboard-Scores-RowLabels-Label\" />\n          {rows.map((row, i) =>\n            <div key={i} className=\"Scoreboard-Scores-RowLabels-Label\">\n              {row.label}\n            </div>\n          )}\n        </div>\n        {players.map(player =>\n          <div key={player} className={`Scoreboard-Scores-Column ${player === players[currentPlayerIndex] ? 'Scoreboard-Scores-Column--current' : ''}`}>\n            <div \n              className={`Scoreboard-Scores-Column-Header`}\n            >\n              {player}\n            </div>\n            {rows.map(row =>\n              <div\n                key={row.key}\n                player={player}\n                className={`Scoreboard-Scores-Column-Score ${!row.assignable ? 'Scoreboard-Scores-Column-Score--unassignable' : ''}`}\n                onClick={() => handleCellClick(row, player)}\n              >\n                {scores[player][row.key].actual !== null\n                  ? scores[player][row.key].actual\n                  : null\n                }\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className=\"Scoreboard-Buttons\">\n        <button onClick={undoLastEntry} disabled={!turnPlayed || gameOver}>\n          undo last entry\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Scoreboard\n","import React, {useState, useEffect, useRef} from 'react'\nimport Players from './../Players'\nimport DiceSet from './../DiceSet'\nimport Scoreboard from './../Scoreboard'\nimport _ from 'lodash'\nimport './style.scss'\n\nconst Game = (props) => {\n  const makeDie = () => {\n    return {saved: false, value: _.random(1, 6)}\n  }\n\n  const makeDice = () => {\n    return new Array(5).fill(null).map(makeDie)\n  }\n\n  const [turnPlayed, setTurnPlayed] = useState(false)\n  const [gameStarted, setGameStarted] = useState(true)\n  const [gameOver, setGameOver] = useState(false)\n  const [players, setPlayers] = useState([])\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0)\n  const [rollIndex, setRollIndex] = useState(0)\n  const [dice, setDice] = useState(makeDice())\n  const [turns, setTurns] = useState(0)\n  const [log, setLog] = useState([])\n  const [scores, setScores] = useState({})\n  const [finalScores, setFinalScores] = useState(null)\n  const logRef = useRef(null)\n  const nextTurnButtonRef = useRef(null)\n  const rollAgainButtonRef = useRef(null)\n  const dice1Ref = useRef(null)\n  const dice2Ref = useRef(null)\n  const dice3Ref = useRef(null)\n  const dice4Ref = useRef(null)\n  const dice5Ref = useRef(null)\n\n  useEffect(() => {\n    if (players.length) {\n      setGameStarted(true)\n    }\n  }, [players])\n\n  useEffect(() => {\n    if (!gameStarted) \n      return\n    if (!players.length)\n      return\n    if (!log.length) {\n      updateLog(`Keyboard commands enabled`)\n      updateLog(` - Press R for 'roll again'`)\n      updateLog(` - Press N for 'next turn'`)\n      updateLog(` - Press 1 - 5 to toggle selected Dice`)\n      updateLog(`Game started with ${players.length} players: ${players.join(', ')}`)\n      // TODO - find a better place to put these...\n      document.addEventListener('keydown', (event) => {\n        if (event.code === \"KeyN\") {\n          nextTurnButtonRef.current && nextTurnButtonRef.current.click()\n        } \n        else if (event.code === \"KeyR\") {\n          rollAgainButtonRef.current && rollAgainButtonRef.current.click()       \n        } \n        else if (event.code === \"Digit1\") {\n          dice1Ref.current && dice1Ref.current.click()\n        }\n        else if (event.code === \"Digit2\") {\n          dice2Ref.current && dice2Ref.current.click()\n        }\n        else if (event.code === \"Digit3\") {\n          dice3Ref.current && dice3Ref.current.click()\n        }\n        else if (event.code === \"Digit4\") {\n          dice4Ref.current && dice4Ref.current.click()\n        }\n        else if (event.code === \"Digit5\") {\n          dice5Ref.current && dice5Ref.current.click()\n        }\n      })\n    }\n  }, [turns, gameStarted, players, players.length, log])\n\n  useEffect(() => {\n    if (!logRef) {\n      return\n    }\n    if (!logRef.current) {\n      return\n    }\n    logRef.current.scrollTop = logRef.current.scrollHeight\n  }, [log])\n\n  useEffect(() => {\n    if (!players.length) return\n    if (gameOver) return\n    let total = 0\n    for (const k1 of Object.keys(scores)) {\n      for (const k2 of Object.keys(scores[k1])) {\n        const score = scores[k1][k2]\n        total += score.assignable && score.actual !== null ? 1 : 0\n      }\n    }\n    if (total === players.length * 13) {\n      updateLog(`GAME OVER!`)\n      const finalScores = []\n      for (const player of players) {\n        finalScores.push({player, score: scores[player].total.actual})\n        updateLog(`${player} has a total score of ${scores[player].total.actual}`)\n      }\n      finalScores.sort((a, b) => a.score > b.score ? -1 : 1)\n      updateLog(`${finalScores[0].player} wins!`)\n      setFinalScores(finalScores)\n      setGameOver(true)\n    }\n  }, [scores, gameOver, players])\n\n  useEffect(() => {\n  }, [])\n\n  const startGame = (players) => {\n    setPlayers(players)\n  }\n\n  const onNextTurn = () => {\n    setCurrentPlayerIndex(turns % players.length)\n    setTurns(turns + 1)\n    rollDice(true)\n  }\n\n  const updateLog = (line) => {\n    setLog(prevLog => [...prevLog, line])\n  }\n\n  const rollDice = (resetDice = null) => {\n    const nextDice = resetDice\n      ? makeDice()\n      : [...dice].map((die) => {\n          die.value = !die.saved ? _.random(1, 6) : die.value\n          return die\n        })\n    setDice(nextDice)\n    setRollIndex(resetDice ? 0 : rollIndex + 1)\n  }\n\n  const renderGame = () => {\n    return (\n      <div className=\"Game\">\n        <div className=\"Game-Playfield\">\n          {turns === 0 &&\n            <div className={`Game-Playfield-StartGame`}>\n              <button onClick={onNextTurn}>\n                Player 1 go!\n              </button>\n            </div>\n          }\n          {gameOver && \n            <div className=\"Game-Playfield-Fragment\">\n              <div className=\"Game-Playfield-GameOver\">\n                <div>GAME OVER!</div>\n                <div>{`${finalScores[0].player} wins!`}</div>\n                <table>\n                  <tbody>\n                    {finalScores.map((fs, i) => \n                      <tr>\n                        <td>{`#${i+1}`}</td>\n                        <td>{fs.player}</td>\n                        <td>{`${fs.score} points`}</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          }\n          {!gameOver && rollIndex >= 0 && turns > 0 &&\n            <div className=\"Game-Playfield-Fragment\">\n              <div className={`Game-Playfield-TurnIndicator ${rollIndex === 2 ? 'last' : ''}`}>\n                <div className=\"Game-Playfield-TurnIndicator-Player\">{`${players[currentPlayerIndex]}'s turn`}</div>\n                <div className=\"Game-Playfield-TurnIndicator-Roll\">{`Roll # ${rollIndex + 1}`}</div>\n              </div>\n              <div className=\"Game-Playfield-Dice\">\n                <DiceSet \n                  turns={turns}\n                  players={players}\n                  currentPlayerIndex={currentPlayerIndex}\n                  rollIndex={rollIndex}\n                  setDice={setDice}\n                  dice={dice}\n                  updateLog={updateLog}\n                  refs={[dice1Ref, dice2Ref, dice3Ref, dice4Ref, dice5Ref]}\n                />\n              </div>\n              <div className=\"Game-Playfield-Buttons\">\n                <button \n                  ref={rollAgainButtonRef} \n                  onClick={() => rollDice(false)} \n                  disabled={rollIndex > 1 || turnPlayed}\n                >\n                  roll again!\n                </button>\n                <button \n                  ref={nextTurnButtonRef} \n                  onClick={onNextTurn} \n                  disabled={!turnPlayed || players.length * 13 === turns}\n                >\n                  next turn!\n                </button>\n              </div>\n            </div>\n          }\n          <div className=\"Game-Playfield-Log\">\n            <textarea ref={logRef} defaultValue={log.join('\\n')} />\n          </div>\n        </div>\n        {gameStarted &&\n          <div className=\"Game-Scoreboard\">\n            <Scoreboard \n              gameOver={gameOver}\n              turns={turns}\n              scores={scores || {}}\n              setScores={setScores}\n              turnPlayed={turnPlayed}\n              setTurnPlayed={setTurnPlayed}\n              setTurns={setTurns}\n              rollIndex={rollIndex}\n              players={players}\n              currentPlayerIndex={currentPlayerIndex}\n              dice={dice}\n              log={log}\n              updateLog={updateLog}\n            />\n          </div>\n        }\n      </div>\n    )\n  }\n\n  return !players.length\n    ? <Players startGame={startGame} />\n    : renderGame()\n}\n\nexport default Game\n","import React from 'react'\nimport Game from './../Game'\nimport './style.scss'\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}